{"version":3,"sources":["components/CommentItem/index.js","components/Comments/index.js","App.js","index.js"],"names":["CommentItem","props","commentList","time","addLiked","checkDelete","id","name","comment","date","backGround","isLiked","Letter","slice","toUpperCase","likeItem","_jsxs","className","children","_jsx","concat","type","onClick","src","alt","initialContainerBackgroundClassNames","initialCommentList","Comments","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","state","count","addComment","event","_this$state","randomColor","Math","ceil","random","preventDefault","AddContact","uudiv4","Date","setState","prevState","_toConsumableArray","onChangeName","target","value","onChangeComment","checkLiked","map","eachComment","_objectSpread","Delete","filter","everyComment","_createClass","key","_this2","_this$state2","this","onSubmit","placeholder","onChange","rows","cols","commentObj","formatDistanceToNow","Component","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.608ec659.chunk.js","sourcesContent":["import './index.css'\n\nconst CommentItem = props => {\n  const {commentList, time, addLiked, checkDelete} = props\n  const {id, name, comment, date, backGround, isLiked} = commentList\n\n  const like =\n    'https://assets.ccbp.in/frontend/react-js/comments-app/like-img.png'\n  const liked =\n    'https://assets.ccbp.in/frontend/react-js/comments-app/liked-img.png '\n  const DeleteBtn =\n    'https://assets.ccbp.in/frontend/react-js/comments-app/delete-img.png'\n\n  const Letter = name.slice(0, 1).toUpperCase()\n  const likeItem = isLiked\n    ? [liked, 'liked', 'liked-color']\n    : [like, 'like', 'like-color']\n\n  const getLike = () => {\n    addLiked(id)\n  }\n\n  const Delete = () => {\n    checkDelete(id)\n  }\n\n  return (\n    <li className=\"list-container\">\n      <div className=\"name-des-content\">\n        <div className={`name-container ${backGround}`}>\n          <p className=\"first-letter\"> {Letter} </p>\n        </div>\n        <div className=\"des\">\n          <p className=\"name-style\">\n            {name} <span> {time(date)} </span>\n          </p>\n          <p className=\"paragraph\">{comment}</p>\n        </div>\n      </div>\n      <div className=\"likes-container\">\n        <button\n          type=\"button\"\n          className={`icon like-button ${likeItem[2]}`}\n          onClick={getLike}\n        >\n          <img src={likeItem[0]} alt={likeItem[1]} className=\"img-width mar\" />\n          Like\n        </button>\n        <button\n          type=\"button\"\n          className=\"like-button\"\n          onClick={Delete}\n          data-testid=\"delete\"\n        >\n          <img src={DeleteBtn} alt=\"delete\" className=\"like-button img-width\" />\n        </button>\n      </div>\n      <hr className=\"line\" />\n    </li>\n  )\n}\nexport default CommentItem\n","import {Component} from 'react'\nimport {v4 as uudiv4} from 'uuid'\nimport {formatDistanceToNow} from 'date-fns'\n\nimport CommentItem from '../CommentItem'\n\nimport './index.css'\n\nconst initialContainerBackgroundClassNames = [\n  'amber',\n  'blue',\n  'orange',\n  'emerald',\n  'teal',\n  'red',\n  'light-blue',\n]\n\nconst initialCommentList = []\n\nclass Comments extends Component {\n  state = {\n    commentList: initialCommentList,\n    name: '',\n    comment: '',\n    count: 0,\n  }\n\n  addComment = event => {\n    const {name, comment} = this.state\n\n    const randomColor =\n      initialContainerBackgroundClassNames[\n        Math.ceil(\n          Math.random() * initialContainerBackgroundClassNames.length - 1,\n        )\n      ]\n\n    event.preventDefault()\n\n    const AddContact = {\n      id: uudiv4(),\n      name,\n      comment,\n      date: new Date(),\n      isLiked: false,\n      backGround: randomColor,\n    }\n\n    this.setState(prevState => ({\n      commentList: [...prevState.commentList, AddContact],\n      name: '',\n      comment: '',\n      count: prevState.count + 1,\n    }))\n  }\n\n  onChangeName = event => {\n    this.setState({name: event.target.value})\n  }\n\n  onChangeComment = event => {\n    this.setState({comment: event.target.value})\n  }\n\n  checkLiked = id => {\n    this.setState(prevState => ({\n      commentList: prevState.commentList.map(eachComment => {\n        if (eachComment.id === id) {\n          return {...eachComment, isLiked: !eachComment.isLiked}\n        }\n        return eachComment\n      }),\n    }))\n  }\n\n  Delete = id => {\n    this.setState(prevState => ({\n      commentList: prevState.commentList.filter(\n        everyComment => everyComment.id !== id,\n      ),\n      count: prevState.count - 1,\n    }))\n  }\n\n  render() {\n    const {commentList, name, comment, count} = this.state\n\n    return (\n      <div className=\"bgContainer\">\n        <div className=\"contentContainer\">\n          <h1 className=\"heading\">Comments</h1>\n          <div className=\"container\">\n            <img\n              src=\"https://assets.ccbp.in/frontend/react-js/comments-app/comments-img.png\"\n              alt=\"comments\"\n              className=\"img\"\n            />\n            <div className=\"comment-section\">\n              <p className=\"about\">Say something about 4.0 technologies</p>\n              <form className=\"comment-container\" onSubmit={this.addComment}>\n                <input\n                  value={name}\n                  className=\"input\"\n                  placeholder=\"Your Name\"\n                  onChange={this.onChangeName}\n                />\n                <textarea\n                  value={comment}\n                  className=\"textarea\"\n                  placeholder=\"Your Comment\"\n                  rows=\"6\"\n                  cols=\"12\"\n                  onChange={this.onChangeComment}\n                >\n                  {' '}\n                </textarea>\n                <button type=\"submit\" className=\"button\">\n                  Add comment\n                </button>\n              </form>\n            </div>\n          </div>\n          <hr className=\"line\" />\n          <div className=\"comments-count\">\n            <p className=\"count\">{count}</p>\n            <p className=\"comments\"> Comments</p>\n          </div>\n\n          {commentList.length > 0 ? (\n            <ul>\n              {commentList.map(commentObj => (\n                <CommentItem\n                  key={commentObj.id}\n                  commentList={commentObj}\n                  time={formatDistanceToNow}\n                  addLiked={this.checkLiked}\n                  checkDelete={this.Delete}\n                />\n              ))}\n            </ul>\n          ) : null}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Comments\n","import Comments from './components/Comments'\n\nimport './App.css'\n\nconst App = () => <Comments />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}